(in-package :sui)
(define-condition window-error (error) (text))  
(defclass Window () ((width :initarg :width :initform 0 :accessor window-width)
		     (height :initarg :height :initform 0 :accessor window-height)
		     (bpp :initarg :bpp :initform 0 :accessor window-bpp) ;;bytes per row
		     (bytes-per-row :reader window-bytes-per-row)
		     (data :initform nil :accessor window-data))
  )
(defmethod window-null? ((window Window))
  (let ((w-property (list (window-width window) (window-height window) (window-bpp window))))
    (some #'(lambda (c) (= c 0)) w-property)
    )
  )
(defmethod initialize-instance :after ((window Window) &key)
  (if (window-null? window) (setf (slot-value window 'bytes-per-row) 0)
    (progn
      (setf (slot-value window 'bytes-per-row) (* (window-bpp window) (window-width window)))
      (let ((size (* (window-height window) (window-width window))))
        (setf (slot-value window 'data) (make-array size)))
      )
    )
  )
(defun create-window (w h bpp)
  (make-instance 'Window :width w :height h :bpp bpp)
  )
(defmacro with-pixel ((pixel window row col) &body body)
  (let ((body-seq nil))
    (dolist (x body)
      (if (listp x) (push 
                     `(,@(substitute `(aref (window-data ,window) (+ (* ,row (window-width ,window)) ,col)) pixel x))
                     body-seq)
        (when (eql pixel x) (push `(aref (window-data ,window) (+ (* ,row (window-width ,window)) ,col)) body-seq))
        )
      )
    (setf body-seq (append body-seq '(progn)))
    `(,@(reverse body-seq))
    )
  )
  
(defun window-set-pixel (window row col value)
  (if (window-null? window) (error 
  (with-pixel (pixel window row col)
	      (setf pixel value)
	      )
  )
(defun window-get-pixel (window row col)
  (with-pixel (pixel window row col)
	      pixel
	      )
  )
;;;; test
(setf cc (create-window 640 480 4))
(dotimes (row 480)
  (dotimes (col 640)
    (window-set-pixel cc row col (* row col))))
(dotimes (row 480)
  (dotimes (col 640)
    (if (not (= (window-get-pixel cc row col) (* row col))) (error "error"))
    )
  )